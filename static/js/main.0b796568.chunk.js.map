{"version":3,"sources":["DataTable.js","Kvalue.js","IrushCurrentForm.js","localStorage.js","Info.js","App.js","reportWebVitals.js","index.js"],"names":["DataTable","props","ResArray","Resval","res","BoolIac0","Imax","T50","Iac","className","Table","responsive","Array","from","length","map","_","index","src","alt","Kvalue","input","Kdata","x","K","findIndex","T","initialValues","date","IrushCurrentForm","change","useState","state","setState","handleChange","e","target","value","name","Date","toLocaleString","htmlFor","id","type","min","max","placeholder","onChange","disabled","onClick","storeData","key","item","localStorage","setItem","JSON","stringify","err","console","error","Info","num","deleteCard","showCard","App","parse","getItem","getData","setResval","HistoryOpen","setHistoryOpen","useEffect","handleDelete","newState","filter","i","handleShowCard","resState","val","P2","P3","icol","Math","floor","uuidv4","newVal","slice","class","info","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b796568.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport './App.css';\r\n\r\n\r\nconst DataTable = (props) => {\r\n  let ResArray = props.Resval.res;\r\n  let BoolIac0 = props.Resval.BoolIac0;\r\n  let Imax = props.Resval.Imax;\r\n  let T50 = props.Resval.T50;\r\n  let Iac = props.Resval.Iac;\r\n\r\n  return (\r\n    <div className='fullTable'>\r\n      {ResArray &&\r\n        <div>\r\n          <div className=\"datatable-title1 col s12\">\r\n            <div className=\"col l3 m0 s0\"></div>\r\n            <div className=\"datatable-title col l6 m12 s12\">\r\n              {/* <Modal.Header> */}\r\n              <div className=\"col l4\">Imax: {Imax} A </div>\r\n              <div className=\"col l4\">T50: {T50} us </div>\r\n              <div className=\"col l4\">Iac: {Iac} A </div>\r\n              {/* </Modal.Header> */}\r\n\r\n            </div>\r\n            <div className=\"col l3 m0 s0\"></div>\r\n          </div>\r\n          <Table responsive className=\"datatable-data col l12 s12\">\r\n            <thead>\r\n              <tr>\r\n                <th>Under 230VAC</th>\r\n                <th>B10</th>\r\n                <th>B13</th>\r\n                <th>B16</th>\r\n                <th>B20</th>\r\n                <th>C10</th>\r\n                <th>C13</th>\r\n                <th>C16</th>\r\n                <th>C20</th>\r\n                <th>D16</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Max No.</td>\r\n                {Array.from({ length: 9 }).map((_, index) => (\r\n                  <td key={'Col' + index}>{ResArray[index]}</td>\r\n                ))}\r\n              </tr>\r\n\r\n            </tbody>\r\n            </Table>\r\n\r\n            <tr>\r\n              <td>Note: These calculated values are based on MCB S200 series manufactured by ABB except for HVG/HVGC series, which are calculated by using MCB S260 series of the same manufacturer. \r\n                \r\n              </td>\r\n\r\n            </tr>\r\n\r\n\r\n          {BoolIac0 &&\r\n            <tr className='warningrow'>\r\n              <td className=\"col l12 s12\">\r\n                INVALID input current value, results may not correct!!!\r\n        </td>\r\n            </tr>\r\n          }\r\n        </div>\r\n      }\r\n      {!ResArray &&\r\n        <div className='fill-window'>\r\n          <h1 className='intro-logo'>\r\n            <img src={'MW.jpg'} className='logo' alt='logo' />\r\n          </h1>\r\n          <h1 className='intro'>Powered by MEAN WELL</h1>\r\n          <h1 className='intro-title'>Circuit breaker selector</h1>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default DataTable;\r\n","import * as Kdata from './K.json';\r\n\r\nfunction Kvalue(input){\r\n  let res;\r\n  let T50 = Kdata.default['Sheet1'].map(x => (x['T50(X)']));\r\n  let K = Kdata.default['Sheet1'].map(x => (x['K(Y)']));\r\n  let index = T50.findIndex(T => T >= input);\r\n  if (T50[index] !== input){\r\n    res = K[index]-(K[index] - K[index - 1]) / (T50[index] - T50[index - 1]) * (T50[index] - input);\r\n  }\r\n  else {\r\n    res = K[index];\r\n  }\r\n\r\n  return res\r\n}\r\nexport default Kvalue;\r\n","import React, { useState } from 'react';\r\n\r\nconst initialValues = {\r\n    Imax: '',\r\n    T50: '',\r\n    Iac: '',\r\n    date: ''\r\n}\r\n\r\nconst IrushCurrentForm = ({ change }) => {\r\n    const [state, setState] = useState(initialValues);\r\n\r\n\r\n\r\n    const handleChange = e => {\r\n        let { value, name } = e.target;\r\n\r\n        if (value > 9999) {\r\n            value = 9999;\r\n        }\r\n        const date = new Date().toLocaleString();\r\n        \r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n            date\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        change(state);\r\n        setState(initialValues);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row headrow\">\r\n                <div className=\"col l3 m4 s12\">\r\n                    <label htmlFor=\"Imax\">Inrush current Imax (A)</label>\r\n                    <input\r\n                        id=\"Imax\"\r\n                        name=\"Imax\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"999\"\r\n                        placeholder=\"53\"\r\n                        value={state.Imax}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col l3 m4 s12\">\r\n                    <label htmlFor=\"T50\">Irush current T50 (us)</label>\r\n                    <input\r\n                        id=\"T50\"\r\n                        name=\"T50\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        max=\"9999\"\r\n                        placeholder=\"178\"\r\n                        value={state.T50}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col l3 m4 s12\">\r\n                    <label htmlFor=\"Iac\">Input Current 230VAC (A)</label>\r\n                    <input\r\n                        id=\"Iac\"\r\n                        name=\"Iac\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"999\"\r\n                        placeholder=\"0.2\"\r\n                        value={state.Iac}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col l3 s12\">\r\n                    <button\r\n                        id=\"Irs-btn\"\r\n                        className=\"calculate-btn\"\r\n                        type=\"button\"\r\n                        disabled={state.Imax === '' || state.T50 === '' }\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Calculate\r\n\t\t\t\t    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default IrushCurrentForm;","export const getData = (key) => {\r\n\tif (!localStorage) return;\r\n\r\n\ttry {\r\n\t\treturn JSON.parse(localStorage.getItem(key));\r\n\t} catch (err) {\r\n\t\tconsole.error(`Error getting item ${key} from localStorage`, err);\r\n\t}\r\n};\r\n\r\nexport const storeData = (key, item) => {\r\n\tif (!localStorage) return;\r\n\r\n\ttry {\r\n\t\treturn localStorage.setItem(key, JSON.stringify(item));\r\n\t} catch (err) {\r\n\t\tconsole.error(`Error storing item ${key} to localStorage`, err);\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nconst Info = ({ num,id, Imax, T50, Iac, date, deleteCard, showCard }) => {\r\n  const handleDelete = () => {\r\n    deleteCard(id);\r\n  };\r\n\r\n  const handleShowCard = () => {\r\n    showCard(id);\r\n  };\r\n  return (\r\n    <div className=\"col l4 m6 s12 info-container\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\" >\r\n          <div className=\"card-display\"\r\n            onClick={handleShowCard}\r\n          >\r\n            <span className = \"card-label\">\r\n            {num+1}\r\n            </span>\r\n            <hr className = \"card-line\"></hr>\r\n            <span className=\"card-title\" >\r\n              Date: {date}\r\n            </span>\r\n            <div className=\"card-data\">\r\n              <span >Imax: {Imax} A</span>\r\n              <span >T50: {T50} us</span>\r\n              <span >Iac: {Iac} A</span>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <button className=\"delete-btn\" onClick={handleDelete}>\r\n            X\r\n              </button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n\r\n}\r\nexport default Info;","import './App.css';\r\nimport DataTable from './DataTable.js'\r\nimport Kvalue from './Kvalue.js';\r\nimport React, { useState, useEffect } from 'react';\r\nimport IrushCurrentForm from './IrushCurrentForm.js';\r\nimport { getData, storeData } from './localStorage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Info from './Info';\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  const initialState = () => getData('IBdata') || [];\r\n  const [state, setState] = useState(initialState);\r\n  const [Resval, setResval] = useState(\"\");\r\n  const [HistoryOpen , setHistoryOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // @state Info log array\r\n    storeData('IBdata', state);\r\n  }, [state]);\r\n\r\n  const handleChange = (val) => {\r\n    // IrushCurrentForm change function\r\n    // @val value get from IrushCurrentForm\r\n    let P1 = [3, 3, 3, 3, 5, 5, 5, 5, 10];//B10\tB13\tB16\tB20\tC10\tC13\tC16\tC20\tD16\r\n    let P2 = [10, 13, 16, 20, 10, 13, 16, 20, 16];//B10\tB13\tB16\tB20\tC10\tC13\tC16\tC20\tD16\r\n    let P3 = P1.map((x, i) => (x * P2[i]));// I*Factor\r\n    let Imax = val.Imax;\r\n    let T50 = val.T50;\r\n    let Iac = val.Iac;\r\n    \r\n    let BoolIac0 = false;\r\n    //This part is Only for one raw TBF.\r\n    if (Imax.length === 0 || Imax === 0) {\r\n      Imax = 0.000001;\r\n    }\r\n\r\n    if (Iac.length === 0 || Iac === 0) {\r\n      Iac = 0.000001;\r\n      BoolIac0 = true;\r\n      \r\n    }\r\n\r\n    let K = Kvalue(T50);\r\n    let res = P3.map((x, icol) => Math.floor(Math.min(x * K / Imax, P2[icol] / Iac)));\r\n\r\n    val.id = uuidv4();\r\n    val.res = res;\r\n    val.BoolIac0 = BoolIac0;\r\n    let newVal = [val, ...state];\r\n    let len = newVal.length;\r\n    if (len > 6) newVal = newVal.slice(0, 6);\r\n    setResval(val);\r\n    setState(newVal);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    // Info log delete function\r\n    // @id id from info.js to delet state\r\n    storeData('IBlastState', state);\r\n    let newState = state.filter(i => {\r\n      return i.id !== id;\r\n    });\r\n    setState(newState);\r\n  };\r\n\r\n  const handleShowCard = id => {\r\n    let resState = state.filter(i => {\r\n      return i.id === id;\r\n    })[0];\r\n    setResval(resState);\r\n\r\n  };\r\n\r\n  const handleHisDisplay =() => {\r\n    setHistoryOpen(!HistoryOpen);\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <IrushCurrentForm change={handleChange} />\r\n      <DataTable\r\n        Resval = {Resval}\r\n      />\r\n      {Resval &&\r\n        <div className='col s12 data-container row'>\r\n\r\n        <div className=\"history-container \">\r\n          <button type=\"button\" class=\"calculate-btn\" onClick = {handleHisDisplay}>\r\n          History logs  ☰\r\n          </button>\r\n\r\n        </div>\r\n          {HistoryOpen && (state.length > 0 ? (\r\n            <>\r\n              {state.map((info,i) => (\r\n                <Info\r\n                  num ={i}\r\n                  key={info.id}\r\n                  id={info.id}\r\n                  Imax={info.Imax}\r\n                  T50={info.T50}\r\n                  Iac={info.Iac}\r\n                  date={info.date}\r\n                  deleteCard={handleDelete}\r\n                  showCard={handleShowCard}\r\n                />\r\n              ))}\r\n            </>\r\n          ) : (\r\n              <div className='center white-text'>No log found</div>\r\n            ))}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}